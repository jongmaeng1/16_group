10/17  7주차  이종명,정인철

객체에 대한 포인터
Circle *p;
p = &donut;
d = p->getArea();    

C언어에서 사용하는 포인터와 거의 똑같은 것 같다. int *p; 에서 데이터타입만 객체로 바뀌었을 뿐!

포인터 개념에 대해서
종명 : 메모리의 위치 가르키는 것 
인철 : 맞다! 그런데 어떤식으로 응용되는지 자세히는 모르겠다
    Q : 변수랑 뭐가 다른가!
    A : 값이 아닌 위치로 참조할 수 있다!!

객체배열 선언가능
 - 생성 및 소멸

Circle circleArray[3];
circleArray[0].setRadius(10);
circleArray[1].setRadius(20);
circleArray[2].setRadius(30);
객체배열은 생성시 기본생성자로 생성이되기 때문에 그 외 파라미터를 넣고싶다면 이런식으로 설정해줘야한다!

Circle circleArray[3];
Cricle *p = circleArray;
p++;
하면 다음 배열이 참조되는 게 신기하다
배열은 사실상 포인터 그 자체였다!

초기화하는 방법이 다양한 게 궁금하다.

2차원배열로 객체를 선언하는것은 기존의 2차원배열과 크게 다르지않아서 문제없었다 

동적메모리 할당
물리적인 메모리에 대한 이해도가 높다면 동적메모리를 이해하기 쉬울 것 같다,
낮은 코드, static 전역, stack등 다양한 공간을 참조하기 때문이다.

heap메모리란?
run time시에 동적으로 할당하기 위한 사용자들이 이용할 영역
new로 선언, delete로 해제 
인철 : 자바에서 많이 썼던 new가 이런 과정이었는지 몰랐다

this를 자바 수업시간에 많이 썼었는데 이렇게까지 전문적으로는 알지 못 하고 있어서 너무 뿌듯하다.
보통 생성자를 구현할 때 같은 필드값끼리 구별하려고만 썼었는데, 자신의 위치를 return하는 용으로도 자주 쓰인다니까 재미있다

string 데이터타입도 해보고싶었는데, 시간이 없어서 시험범위에서 빠졌다... 시험은 아니더라도 그냥 해보기로했다.
